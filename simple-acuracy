/*
Acuracia simples dos dados de cicatrizes de fogo do MapBiomas-Fogo

"verdade": MCD64A1 e GABAM

Simple acuracy os scars data of MapBiomas-Fogo

"truth": MCD64a1 and GABAM

by: Instituto de Pesquisa Ambiental da Amazônia - IPAM
dev: Wallace Silva, Vera Laisa e Ane Alencar

contact: wallace.silva@ipam.org.br

*/


var scale = 30;

var version = 'v1';
var years = [
  2005,
  2010,
  2018,


  2007,
  2011,
  2019,
];


var nivel_0 = [
  1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,2
];

var nivel_4 = [
  1,3,4,5,6,49,10,11,12,32,29,50,13,14,15,18,19,39,20,40,41,36,46,47,48,9,21,22,23,24,51,52,53,30,25,26,33,31,54,55,56,27,
];

var biomas_names = ee.Dictionary({
  0:'null',
  1:'Amazônia',
  2:'Caatinga',
  3:'Cerrado',
  4:'Mata Atlântica',
  5:'Pampa',
  6:'Pantanal'
});

var cover_names = ee.Dictionary({
  1:'Natural',
  2:'Antrópico'
});

var cover = ee.Image('projects/mapbiomas-workspace/public/collection6/mapbiomas_collection60_integration_v1');

var modis = ee.ImageCollection("MODIS/006/MCD64A1")
  .select('BurnDate');

var mb_fogo = ee.Image('projects/mapbiomas-workspace/public/collection6/mapbiomas-fire-collection1-annual-burned-coverage-1')
  .gte(1);
  // .aside(print);
  
var biomas = ee.FeatureCollection('projects/mapbiomas-workspace/AUXILIAR/biomas_IBGE_250mil');

var pampa = biomas
  .filter(ee.Filter.eq('Bioma','Pampa'))
  .geometry();

var brasil = ee.Image(1)
  .paint(biomas);

var biomas = ee.Image()
  .paint(biomas,'CD_Bioma');

// burned_coverage_1988

var recipe = ee.FeatureCollection([]);

years = years.forEach(function(year){
  
  var mb = mb_fogo
    .select(['burned_coverage_' + year],['mapbiomas-fogo']);
  
  var inverse = ee.Image(2)
    .blend(mb)
    .updateMask(brasil.eq(0))
    .rename('mapbiomas-fogo');

  inverse = inverse.updateMask(inverse.neq(1));

  var cover_year = cover
    .select('classification_'+year)
    .remap(nivel_4,nivel_0);

  
  var ref = modis
    .filterDate(''+year+'-01-01', ''+year+'01-01')
    .mosaic()
    .gte(1);
  
  ref = ee.Image(0)
    .blend(ref)
    .rename('modis')
    .addBands(ee.Image(0).blend(biomas).rename('bioma'))
    .addBands(cover_year.rename('cover'));
  
  
  var gabam_dic ={
    2000:2000,
    2005:2005,
    2010:2010,
    2015:2015,
    2018:2018,
  };
  // print(gabam_dic[year],year)
  if (gabam_dic[year] === year){
    print(gabam_dic[year])
    var gabam = ee.Image(0)
      .blend(ee.Image('users/wallacesilva/gabam/GABAM_BR_'+year))
      .rename('gabam');

    ref = ref.addBands(gabam);
  }

  mb =  mb.addBands(ref);

  
  inverse = inverse
    .addBands(ref);
  
  var fire = mb.stratifiedSample({
      numPoints:2000,
      // classBand:,
      region:geometry,
      scale:scale,
      // projection:,
      seed:2000,
      // classValues:,
      // classPoints:,
      // dropNulls:,
      tileScale:4,
      // geometries:true
  })
  
  var fire_pampa = mb
    .clip(pampa)
    .stratifiedSample({
      numPoints:30,
      // classBand:,
      region:pampa.bounds(),
      scale:scale,
      // projection:,
      seed:30 + year,
      // classValues:,
      // classPoints:,
      // dropNulls:,
      tileScale:4,
      // geometries:true
  })
  
  
  var noFire = inverse.stratifiedSample({
      numPoints:8000,
      // classBand:,
      region:geometry,
      scale:scale,
      // projection:,
      seed:8000,
      // classValues:,
      // classPoints:,
      // dropNulls:,
      tileScale:4,
      // geometries:true
  });
  
  fire = fire
    .merge(fire_pampa)
    .map(function(feature){
    var biome_cod = ee.Number.parse(feature.get('bioma'));
    
    var cover_cod = feature.get('cover');

    return feature.set({
      bioma:biomas_names.get(biome_cod),
      cover:cover_names.get(cover_cod),
      year:year,
    });
  }).filter(ee.Filter.neq('bioma','null'));
  
  
  noFire = noFire.map(function(feature){
    var biome_cod = ee.Number.parse(feature.get('bioma'));
    
    var cover_cod = feature.get('cover');

    return feature.set({
      'mapbiomas-fogo':0,
      bioma:biomas_names.get(biome_cod),
      cover:cover_names.get(cover_cod),
      year:year,
    });
    // .set('burned_coverage_'+year,0);
  }).filter(ee.Filter.neq('bioma','null'));
  
  recipe = recipe
    .merge(fire)
    .merge(noFire);

});

print(recipe.limit(2));

Export.table.toDrive({
  collection:recipe,
  description:'points-acuracy-scale-'+scale+'-'+version +'-2022-01-10',
  folder:'mapbiomas-fogo',
  fileNamePrefix:'points-acuracy-scale-'+scale+'-'+version +'-2022-01-10',
  fileFormat:'CSV',
  // selectors:,
  // maxVertices:
});

